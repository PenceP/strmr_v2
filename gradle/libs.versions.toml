[versions]
aboutlibraries = "12.2.4"
accompanist = "0.37.3"
acra = "5.12.0"
android-compileSdk = "36"
android-desugar = "2.1.5"
android-gradle = "8.12.0"
android-minSdk = "21"
android-targetSdk = "36"
androidx-activity = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-cardview = "1.0.0"
androidx-compose-foundation = "1.8.3"
androidx-compose-ui = "1.8.3"
androidx-constraintlayout = "2.2.1"
androidx-core = "1.16.0"
androidx-fragment = "1.8.8"
androidx-leanback = "1.2.0"
androidx-lifecycle = "2.9.2"
androidx-media3 = "1.8.0"
androidx-preference = "1.2.1"
androidx-recyclerview = "1.4.0"
androidx-startup = "1.2.0"
androidx-tvprovider = "1.1.0"
androidx-window = "1.4.0"
androidx-work = "2.10.3"
coil = "3.3.0"
detekt = "1.23.8"

# New dependencies for Trakt/TMDB migration
room = "2.7.0"
retrofit = "2.11.0"
retrofit-kotlinx-serialization = "1.0.0"
okhttp = "4.12.0"
paging = "3.3.2"
mockwebserver = "4.12.0"
androidx-test = "1.6.1"
espresso = "3.6.1"
java-jdk = "21"
jellyfin-androidx-media = "1.8.0+1"
jellyfin-sdk = "1.7.0-beta.3"
koin = "4.1.0"
koin-compose = "4.1.0"
kotest = "5.9.1"
kotlin = "2.2.0"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
libass-android = "0.3.0-rc02"
markwon = "4.6.2"
mockk = "1.14.5"
slf4j-timber = "0.0.4"
timber = "5.0.1"

[plugins]
aboutlibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[libraries]
# Jellyfin
jellyfin-sdk = { module = "org.jellyfin.sdk:jellyfin-core", version.ref = "jellyfin-sdk" }

# Kotlin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Android(x)
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidx-cardview" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose-foundation" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose-ui" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-fragment-compose = { module = "androidx.fragment:fragment-compose", version.ref = "androidx-fragment" }
androidx-leanback-core = { module = "androidx.leanback:leanback", version.ref = "androidx-leanback" }
androidx-leanback-preference = { module = "androidx.leanback:leanback-preference", version.ref = "androidx-leanback" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidx-preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
androidx-tvprovider = { module = "androidx.tvprovider:tvprovider", version.ref = "androidx-tvprovider" }
androidx-window = { module = "androidx.window:window", version.ref = "androidx-window" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "androidx-work" }

# Dependency Injection
koin-android-compat = { module = "io.insert-koin:koin-android-compat", version.ref = "koin" }
koin-android-core = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }

# Media players
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "androidx-media3" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidx-media3" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "androidx-media3" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "androidx-media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "androidx-media3" }
jellyfin-androidx-media3-ffmpeg-decoder = { module = "org.jellyfin.media3:media3-ffmpeg-decoder", version.ref = "jellyfin-androidx-media" }
libass-media3 = { module = "io.github.peerless2012:ass-media", version.ref = "libass-android" }

# Markwon
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }

# Image utility
coil-core = { module = "io.coil-kt.coil3:coil-core", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }

# Crash Reporting
acra-core = { module = "ch.acra:acra-core", version.ref = "acra" }
acra-toast = { module = "ch.acra:acra-toast", version.ref = "acra" }

# Libraries
aboutlibraries = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutlibraries" }

# Logging
slf4j-timber = { module = "io.github.unveloper:slf4j-timber", version.ref = "slf4j-timber" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Compatibility (desugaring)
android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }

# Test utilities
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# New libraries for Trakt/TMDB migration
# Database
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
androidx-room-paging = { group = "androidx.room", name = "room-paging", version.ref = "room" }
androidx-room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }

# Networking  
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-kotlinx-serialization = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlinx-serialization" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }

# Pagination
androidx-paging-runtime = { group = "androidx.paging", name = "paging-runtime", version.ref = "paging" }
androidx-paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "paging" }
androidx-paging-testing = { group = "androidx.paging", name = "paging-testing", version.ref = "paging" }

# Testing
squareup-okhttp3-mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockwebserver" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test" }
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidx-test" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "androidx-test" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockk" }
koin-test = { group = "io.insert-koin", name = "koin-test", version.ref = "koin" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

[bundles]
acra = [
    "acra-core",
    "acra-toast",
]
androidx-compose = [
    "androidx-compose-foundation",
    "androidx-compose-ui-tooling",
]
androidx-lifecycle = [
    "androidx-lifecycle-process",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-service",
    "androidx-lifecycle-viewmodel",
]
coil = [
    "coil-core",
    "coil-compose",
    "coil-network-okhttp",
    "coil-gif",
    "coil-svg",
]
koin = [
    "koin-android-compat",
    "koin-android-core",
    "koin-androidx-workmanager",
    "koin-androidx-compose",
]
markwon = [
    "markwon-core",
    "markwon-html",
]
